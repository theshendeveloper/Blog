<?php

namespace App\Models;

use App\Http\Traits\HasPublished;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Cache;


class Comment extends Model
{
    use HasPublished;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::saved(function ($comment) {

            Cache::tags('comments')->flush();
            if ($comment->is_published or $comment->wasChanged('is_published')){
                Cache::tags('post-'.$comment->post_id.'-comments')->flush();
            }
        });
        static::deleted(function ($comment) {
            Cache::tags('comments')->flush();
            if ($comment->is_published)
            {
                Cache::tags('post-'.$comment->post_id.'-comments')->flush();
            }

        });
    }
    protected $guarded = ['is_published','post_id'];

    protected $casts = ['is_published' => 'boolean'];

    public function post()
    {
        return $this->belongsTo(Post::class);
    }

}
