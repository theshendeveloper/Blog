<?php

namespace Tests;

use App\Models\Permission;
use App\Models\Role;
use App\Models\User;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
use Illuminate\Support\Facades\Gate;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->createPermissionRelatedThings();
        $user = $this->createUserAndAssignRole();
        $this->be($user);
    }

    protected function createPermissionRelatedThings()
    {
        $this->seed('RoleAndPermissionSeeder');
        Gate::before(function($user) {
            if($user->isAdmin()) return true;
        });
        foreach (Permission::all() as $permission) {
            Gate::define($permission->name, function ($user) use ($permission) {
                return $user->hasPermission($permission);
            });
        }
    }
    protected function createUserAndAssignRole($condition = 'whereIn', $roles = ['Admin', 'Writer'])
    {

        $user = create(User::class);
        $user->assignRole(Role::$condition('name', $roles)->first());
        return $user;
    }
}
